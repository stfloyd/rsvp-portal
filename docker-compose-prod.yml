version: "3.4"

volumes:
  postgres-data: {}
  redis-data: {}

services:
  backend:
    build:
      context: ./backend
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
    command: /gunicorn.sh
    entrypoint: /entrypoint.sh
    restart: on-failure
    env_file: .env

  postgres:
    image: postgres:alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file: .env

  redis:
    image: redis:latest
    command: redis-server --requirepass mysecretpass
    restart: on-failure
    volumes:
      - redis-data:/var/lib/redis
    env_file: .env

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./backend/media/:/media/
      - ./backend/static/:/static/
      - ./nginx/prod.conf:/etc/nginx/nginx.conf:ro
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

  backups:
    image: prodrigestivill/postgres-backup-local
    restart: on-failure
    depends_on:
      - postgres
    volumes:
      - /tmp/backups/:/backups/
