version: "3.4"

volumes:
  postgres-data: {}
  pgadmin-data: {}
  redis-data: {}

services:
  backend:
    build:
      context: ./backend
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    command: /start.sh
    entrypoint: /entrypoint.sh
    restart: on-failure
    env_file: .env
    links:
      - "redis:redis-server"

  postgres:
    image: postgres:alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file: .env
    ports:
      - "5432:5432"

  frontend:
    image: node:current-alpine
    command: sh -c "yarn install && yarn serve"
    volumes:
      - ./.env:/app/.env:ro
      - ./frontend:/app
    working_dir: /app
    restart: on-failure

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@localhost
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 8081
    ports:
      - "8081:8081"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    links:
      - "postgres:pgsql-server"

  nginx:
    image: nginx:alpine
    ports:
      - "8000:80"
    depends_on:
      - backend
    volumes:
      - ./backend/media/:/media/
      - ./backend/static/:/static/
      - ./nginx/dev.conf:/etc/nginx/nginx.conf:ro
    logging:
      driver: none

  redis:
    image: redis:latest
    command: redis-server --requirepass mysecretpass
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/var/lib/redis
